/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define FUNC    3

&led_strip {
    chain-length = <27>;
};

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            //╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
            //│ TAB       | Q         │ W         │ E         │ R         │ T         │   │ Y         │ U         │ I         │ O         │ P         │ BSPC      │
                &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
            //├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
            //│ LCTRL     │ A         │ S         │ D         │ F         │ G         │   │ H         │ J         │ K         │ L         │ ;         │ '         │
                &kp LCTRL   &kp A       &kp S       &kp D       &kp F       &kp G           &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
            //├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
            //│ LSHFT     │ Z         │ X         │ C         │ V         │ B         │   │ N         │ M         │ COMMA     │ DOT       │ FWDSLH    │ ESC         │
                &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp ESC
            //╰───────────┴───────────┴───────────┼───────────┼───────────┤───────────┼   ├───────────┼───────────┼───────────┼───────────┴───────────┴───────────╯
            //                                    │ LALT      │ LOWER     │ SPACE     │   │ ENTER     │ RAISE     │ WINDOWS   │
                                                    &kp LALT    &mo LOWER   &kp SPACE       &kp RET     &mo RAISE   &kp RGUI
            //                                    ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
            >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | PGUP|      |
// | SHFT |     |     |     |     |     |   |     |     |     |     | PGDN|      |
//                    |     |     | SPC |   | ENT | FN  |     |
            bindings = <
            //╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
            //│ TAB       | 1         │ 2         │ 3         │ 4         │ 5         │   │ 6         │ 7         │ 8         │ 9         │ 0         │ BSPC      │
                &kp TAB     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp BSPC

   &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp PG_UP &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &kp PG_DN &trans
                                    &trans     &trans       &kp SPACE      &kp RET  &mo FUNC   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     | FN  | SPC |   | ENT |     |     |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &trans &mo FUNC   &kp SPACE   &kp RET   &trans    &trans
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8  |  F9   | F10    | BSPC  |
// | CTRL | F11 | F12 |     |     |BTCLR|   |     |C_PP |RGBHUI|RGBBRI | RGBTOG | VOLUP |
// | SHFT |     |     |     |     |     |   |     |     |RGBHUD|RGBBRD | RGBEFF | VOLDN |
//                    |     |     | SPC |   | ENT |     |      |
                        bindings = <
   &kp TAB    &kp F1   &kp F2    &kp F3   &kp F4   &kp F5      &kp F6    &kp F7    &kp F8           &kp F9           &kp F10       &kp BSPC
   &kp LCTRL  &kp F11  &kp F12   &trans   &trans   &bt BT_CLR  &trans    &kp C_PP  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &kp C_VOL_UP
   &kp LSHFT  &trans   &trans    &trans   &trans   &trans      &trans    &trans    &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &kp C_VOL_DN
                                 &trans   &trans   &kp SPACE   &kp RET   &trans    &trans
                        >;
                };
        };
};
